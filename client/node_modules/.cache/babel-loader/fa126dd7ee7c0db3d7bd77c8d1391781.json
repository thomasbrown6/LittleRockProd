{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\v-thobr\\\\projects\\\\littlerock\\\\LittleRockChurchApp\\\\client\\\\src\\\\components\\\\admin\\\\Layout.jsx\";\nimport stylesheet from \"../../styles/main.scss\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport SideNav from \"../SideNav\";\nimport Footer from \"../Footer\";\nimport BtnBottom from \"../BtnBottom\";\n\nconst Layout = ({\n  isAuthenticated,\n  children\n}) => {\n  const [isMenuVisible, setMenuVisible] = useState(false);\n  const [loading, setloading] = useState(\"is-loading\");\n  const [isSubMenuVisible, setSubMenuVisible] = useState(false);\n  useEffect(() => {\n    let timeoutId = setTimeout(() => {\n      setloading(\"\");\n    }, 100);\n  }, []);\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/admin/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const handleToggleMenu = () => {\n    setMenuVisible({\n      isMenuVisible: !isMenuVisible\n    });\n  };\n\n  const handleHoverMenu = () => {\n    setMenuVisible({\n      isMenuVisible: !isSubMenuVisible\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: stylesheet\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onToggleMenu: handleToggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), children));\n};\n\nLayout.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect()(Layout);","map":{"version":3,"sources":["C:/Users/v-thobr/projects/littlerock/LittleRockChurchApp/client/src/components/admin/Layout.jsx"],"names":["stylesheet","React","Fragment","useState","useEffect","Link","Redirect","connect","PropTypes","Header","SideNav","Footer","BtnBottom","Layout","isAuthenticated","children","isMenuVisible","setMenuVisible","loading","setloading","isSubMenuVisible","setSubMenuVisible","timeoutId","setTimeout","handleToggleMenu","handleHoverMenu","__html","propTypes","bool","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AAChD,QAAM,CAACC,aAAD,EAAgBC,cAAhB,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,YAAD,CAAtC;AACA,QAAM,CAACiB,gBAAD,EAAmBC,iBAAnB,IAAwClB,QAAQ,CAAC,KAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,SAAS,GAAGC,UAAU,CAAC,MAAM;AAC/BJ,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAFyB,EAEvB,GAFuB,CAA1B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIL,eAAJ,EAAqB;AACnB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,QAAMU,gBAAgB,GAAG,MAAM;AAC7BP,IAAAA,cAAc,CAAC;AACbD,MAAAA,aAAa,EAAE,CAACA;AADH,KAAD,CAAd;AAGD,GAJD;;AAMA,QAAMS,eAAe,GAAG,MAAM;AAC5BR,IAAAA,cAAc,CAAC;AACbD,MAAAA,aAAa,EAAE,CAACI;AADH,KAAD,CAAd;AAGD,GAJD;;AAMA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,uBAAuB,EAAE;AAAEM,MAAAA,MAAM,EAAE1B;AAAV,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEwB,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGT,QAFH,CAHF,CADF;AAWD,CArCD;;AAuCAF,MAAM,CAACc,SAAP,GAAmB;AACjBb,EAAAA,eAAe,EAAEN,SAAS,CAACoB;AADV,CAAnB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChChB,EAAAA,eAAe,EAAEgB,KAAK,CAACC,IAAN,CAAWjB;AADI,CAAL,CAA7B;;AAIA,eAAeP,OAAO,GAAGM,MAAH,CAAtB","sourcesContent":["import stylesheet from \"../../styles/main.scss\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport SideNav from \"../SideNav\";\r\nimport Footer from \"../Footer\";\r\nimport BtnBottom from \"../BtnBottom\";\r\n\r\nconst Layout = ({ isAuthenticated, children }) => {\r\n  const [isMenuVisible, setMenuVisible] = useState(false);\r\n  const [loading, setloading] = useState(\"is-loading\");\r\n  const [isSubMenuVisible, setSubMenuVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let timeoutId = setTimeout(() => {\r\n      setloading(\"\");\r\n    }, 100);\r\n  }, []);\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/admin/dashboard\" />;\r\n  }\r\n  const handleToggleMenu = () => {\r\n    setMenuVisible({\r\n      isMenuVisible: !isMenuVisible\r\n    });\r\n  };\r\n\r\n  const handleHoverMenu = () => {\r\n    setMenuVisible({\r\n      isMenuVisible: !isSubMenuVisible\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <style dangerouslySetInnerHTML={{ __html: stylesheet }} />\r\n\r\n      <div id=\"wrapper\">\r\n        <Header onToggleMenu={handleToggleMenu} />\r\n        {children}\r\n        {/* <Footer /> */}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect()(Layout);\r\n"]},"metadata":{},"sourceType":"module"}