{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_IMAGES, IMAGE_ERROR, CLEAR_IMAGE } from \"./types\"; // Upload a Image\n\nexport const uploadEventImage = FormData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const image = {\n      url: FormData\n    };\n    console.log(image);\n    const res = await axios.post(\"/api/events/images\", image, config);\n    dispatch({\n      type: GET_IMAGES,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Image uploaded\", \"success\"));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"error\")));\n    }\n\n    dispatch({\n      type: IMAGE_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get users daycares\n\nexport const getImages = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/events/images\");\n    dispatch({\n      type: GET_IMAGES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLEAR_IMAGE\n    });\n    dispatch({\n      type: IMAGE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete image\n\nexport const deleteImage = id => async dispatch => {\n  if (window.confirm(\"Are you sure you want to delete your image?\")) {\n    try {\n      console.log(`deleting image at position: ${id}`);\n      await axios.delete(`/api/events/images/${id}`);\n      dispatch({\n        type: CLEAR_IMAGE\n      });\n      dispatch(setAlert(\"Your image has been deleted\"));\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, \"error\")));\n      }\n\n      dispatch({\n        type: IMAGE_ERROR,\n        payload: {\n          msg: err.response,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/v-thobr/projects/littlerock/LittleRockChurchApp/client/src/actions/images.js"],"names":["axios","setAlert","GET_IMAGES","IMAGE_ERROR","CLEAR_IMAGE","uploadEventImage","FormData","dispatch","config","headers","image","url","console","log","res","post","type","payload","data","err","errors","response","forEach","error","msg","status","getImages","get","statusText","deleteImage","id","window","confirm","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,WAAlC,QAAqD,SAArD,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAChE,MAAI;AACF,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,KAAK,GAAG;AACZC,MAAAA,GAAG,EAAEL;AADO,KAAd;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,UAAMI,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,oBAAX,EAAiCL,KAAjC,EAAwCF,MAAxC,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd,UADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAKAX,IAAAA,QAAQ,CAACN,QAAQ,CAAC,gBAAD,EAAmB,SAAnB,CAAT,CAAR;AACD,GApBD,CAoBE,OAAOkB,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWhB,QAAQ,CAACN,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAY,OAAZ,CAAT,CAAlC;AACD;;AAEDjB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEb,WADC;AAEPc,MAAAA,OAAO,EAAE;AAAEO,QAAAA,GAAG,EAAEL,GAAG,CAACE,QAAX;AAAqBI,QAAAA,MAAM,EAAEN,GAAG,CAACE,QAAJ,CAAaI;AAA1C;AAFF,KAAD,CAAR;AAID;AACF,CAjCM,C,CAmCP;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOnB,QAAP,IAAoB;AACjD,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMd,KAAK,CAAC2B,GAAN,CAAU,oBAAV,CAAlB;AAEApB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd,UADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZZ,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AAEAG,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEb,WADC;AAEPc,MAAAA,OAAO,EAAE;AAAEO,QAAAA,GAAG,EAAEL,GAAG,CAACE,QAAJ,CAAaO,UAApB;AAAgCH,QAAAA,MAAM,EAAEN,GAAG,CAACE,QAAJ,CAAaI;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAhBM,C,CAkBP;;AACA,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAOvB,QAAP,IAAoB;AACrD,MAAIwB,MAAM,CAACC,OAAP,CAAe,6CAAf,CAAJ,EAAmE;AACjE,QAAI;AACFpB,MAAAA,OAAO,CAACC,GAAR,CAAa,+BAA8BiB,EAAG,EAA9C;AAEA,YAAM9B,KAAK,CAACiC,MAAN,CAAc,sBAAqBH,EAAG,EAAtC,CAAN;AAEAvB,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEZ;AAAR,OAAD,CAAR;AAEAG,MAAAA,QAAQ,CAACN,QAAQ,CAAC,6BAAD,CAAT,CAAR;AACD,KARD,CAQE,OAAOkB,GAAP,EAAY;AACZ,YAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,UAAIA,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWhB,QAAQ,CAACN,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAY,OAAZ,CAAT,CAAlC;AACD;;AACDjB,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEb,WADC;AAEPc,QAAAA,OAAO,EAAE;AACPO,UAAAA,GAAG,EAAEL,GAAG,CAACE,QADF;AAEPI,UAAAA,MAAM,EAAEN,GAAG,CAACE,QAAJ,CAAaI;AAFd;AAFF,OAAD,CAAR;AAOD;AACF;AACF,CAzBM","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport { GET_IMAGES, IMAGE_ERROR, CLEAR_IMAGE } from \"./types\";\r\n\r\n// Upload a Image\r\nexport const uploadEventImage = (FormData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    const image = {\r\n      url: FormData\r\n    };\r\n\r\n    console.log(image);\r\n\r\n    const res = await axios.post(\"/api/events/images\", image, config);\r\n    dispatch({\r\n      type: GET_IMAGES,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Image uploaded\", \"success\"));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"error\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: IMAGE_ERROR,\r\n      payload: { msg: err.response, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get users daycares\r\nexport const getImages = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/events/images\");\r\n\r\n    dispatch({\r\n      type: GET_IMAGES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: CLEAR_IMAGE });\r\n\r\n    dispatch({\r\n      type: IMAGE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete image\r\nexport const deleteImage = (id) => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure you want to delete your image?\")) {\r\n    try {\r\n      console.log(`deleting image at position: ${id}`);\r\n\r\n      await axios.delete(`/api/events/images/${id}`);\r\n\r\n      dispatch({ type: CLEAR_IMAGE });\r\n\r\n      dispatch(setAlert(\"Your image has been deleted\"));\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, \"error\")));\r\n      }\r\n      dispatch({\r\n        type: IMAGE_ERROR,\r\n        payload: {\r\n          msg: err.response,\r\n          status: err.response.status\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}