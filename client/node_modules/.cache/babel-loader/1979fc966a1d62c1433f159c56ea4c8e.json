{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\v-thobr\\\\projects\\\\littlerock\\\\LittleRockChurchApp\\\\client\\\\src\\\\pages\\\\media-resources\\\\watch-online.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../../components/Layout\";\nimport Banner from \"../../components/Banner\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport YouTube from \"react-youtube\";\nimport { getLivestreamKey, uploadLivestreamKey } from \"../../actions/key\";\n\nconst WatchOnline = ({\n  auth: {\n    isAuthenticated\n  },\n  livestream: {\n    data\n  },\n  getLivestreamKey,\n  uploadLivestreamKey\n}) => {\n  useEffect(() => {\n    getLivestreamKey();\n  }, [getLivestreamKey]);\n\n  const _onReady = event => {\n    // access to player in all event handlers via event.target\n    event.target.playVideo();\n  };\n\n  const [inputKey, setInputKey] = useState();\n\n  const handleInputChange = e => {\n    setInputKey(e.target.value);\n  };\n\n  const uploadKey = async => {\n    console.log(\"uploading key... \" + inputKey);\n    uploadLivestreamKey(inputKey);\n  };\n\n  console.log(`key data ${data ? data : \" - no key\"}`);\n  const opts = {\n    height: \"900\",\n    width: \"1200\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Banner, {\n    id: \"banner\",\n    headerText: \"Watch Online\",\n    image: require(\"../../static/images/banners/watch-online.jpg\"),\n    Breadcrumb1: \"HOME\",\n    tag1: \"a\",\n    href1: \"/\",\n    Breadcrumb2: \"GET CONNECTED\",\n    tag2: \"a\",\n    href2: \"#\",\n    Breadcrumb3: \"Watch Online\",\n    tag3: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"major\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Watch Online\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center wd100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  }, isAuthenticated && /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    margin: \"normal\",\n    name: \"inputKey\",\n    value: inputKey,\n    onChange: e => handleInputChange(e),\n    label: \"Video Key\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  })))), isAuthenticated && /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: uploadKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, \"Upload Key\")))), /*#__PURE__*/React.createElement(YouTube, {\n    videoId: data ? data : \"\" // defaults -> null\n    //videoId={\"UCZ3K2j4WbnJ_jqL6Wmqi4mA\"} // defaults -> null\n    ,\n    id: \"YoutubePlayer\" // defaults -> null\n    ,\n    className: \"YoutubePlayer center\" // defaults -> null\n    ,\n    containerClassName: null // defaults -> ''\n    ,\n    opts: opts // defaults -> {}\n    ,\n    onReady: _onReady // defaults -> noop\n    // onPlay={func}                     // defaults -> noop\n    // onPause={func}                    // defaults -> noop\n    // onEnd={func}                      // defaults -> noop\n    // onError={func}                    // defaults -> noop\n    // onStateChange={func}              // defaults -> noop\n    // onPlaybackRateChange={func}       // defaults -> noop\n    // onPlaybackQualityChange={func}    // defaults -> noop\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  })))))))))));\n};\n\nWatchOnline.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  getLivestreamKey: PropTypes.func.isRequired,\n  uploadLivestreamKey: PropTypes.func.isRequired,\n  livestream: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  livestream: state.livestream\n});\n\nexport default connect(mapStateToProps, {\n  getLivestreamKey,\n  uploadLivestreamKey\n})(WatchOnline);","map":{"version":3,"sources":["C:/Users/v-thobr/projects/littlerock/LittleRockChurchApp/client/src/pages/media-resources/watch-online.jsx"],"names":["React","useState","useEffect","connect","PropTypes","Layout","Banner","Container","Row","Col","TextField","Button","YouTube","getLivestreamKey","uploadLivestreamKey","WatchOnline","auth","isAuthenticated","livestream","data","_onReady","event","target","playVideo","inputKey","setInputKey","handleInputChange","e","value","uploadKey","async","console","log","opts","height","width","playerVars","autoplay","require","propTypes","bool","isRequired","func","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Layout from \"../../components/Layout\";\r\nimport Banner from \"../../components/Banner\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nimport { getLivestreamKey, uploadLivestreamKey } from \"../../actions/key\";\r\n\r\nconst WatchOnline = ({\r\n  auth: { isAuthenticated },\r\n  livestream: { data },\r\n  getLivestreamKey,\r\n  uploadLivestreamKey\r\n}) => {\r\n  useEffect(() => {\r\n    getLivestreamKey();\r\n  }, [getLivestreamKey]);\r\n\r\n  const _onReady = (event) => {\r\n    // access to player in all event handlers via event.target\r\n    event.target.playVideo();\r\n  };\r\n\r\n  const [inputKey, setInputKey] = useState();\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputKey(e.target.value);\r\n  };\r\n\r\n  const uploadKey = (async) => {\r\n    console.log(\"uploading key... \" + inputKey);\r\n    uploadLivestreamKey(inputKey);\r\n  };\r\n\r\n  console.log(`key data ${data ? data : \" - no key\"}`);\r\n  const opts = {\r\n    height: \"900\",\r\n    width: \"1200\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Banner\r\n          id=\"banner\"\r\n          headerText=\"Watch Online\"\r\n          image={require(\"../../static/images/banners/watch-online.jpg\")}\r\n          Breadcrumb1=\"HOME\"\r\n          tag1=\"a\"\r\n          href1=\"/\"\r\n          Breadcrumb2=\"GET CONNECTED\"\r\n          tag2=\"a\"\r\n          href2=\"#\"\r\n          Breadcrumb3=\"Watch Online\"\r\n          tag3=\"span\"\r\n        />\r\n\r\n        <div className=\"secondary\">\r\n          <section id=\"two\">\r\n            <div className=\"inner\">\r\n              <Container>\r\n                <div className=\"left\">\r\n                  <Row>\r\n                    <Col xs={12}>\r\n                      <header className=\"major\">\r\n                        <h1>Watch Online</h1>\r\n                      </header>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <div className=\"center wd100\">\r\n                      <Col xs={12}>\r\n                        {isAuthenticated && (\r\n                          <Row>\r\n                            <Col xs={12}>\r\n                              <div className=\"center\">\r\n                                <TextField\r\n                                  id=\"standard-basic\"\r\n                                  margin=\"normal\"\r\n                                  name=\"inputKey\"\r\n                                  value={inputKey}\r\n                                  onChange={(e) => handleInputChange(e)}\r\n                                  label=\"Video Key\"\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        )}\r\n                        {isAuthenticated && (\r\n                          <Row>\r\n                            <Col xs={12}>\r\n                              <div className=\"center\">\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={uploadKey}\r\n                                >\r\n                                  Upload Key\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        )}\r\n                        {/* <Vimeo videoId={\"https://vimeo.com/events/8770696/videos/194916621\"} autoplay={true} /> */}\r\n                        {/* <iframe src=\"https://player.vimeo.com/video/2111489\" width=\"100%\" height=\"100%\" frameborder=\"0\" title=\"Live Stream\" webkitallowfullscreen mozallowfullscreen allowfullscreen> */}\r\n                        {/* <iframe src=\"https://vimeo.com/groups/8770696/videos/194942590\" width=\"100%\" height=\"100%\" frameborder=\"0\" title=\"Live Stream\" webkitallowfullscreen mozallowfullscreen allowfullscreen> */}\r\n\r\n                        {/* </iframe> */}\r\n                        {/* <ReactPlayer url='https://livestream.com/accounts/2111489/events/8770696' width='100%'  height='100%' playing={true} /> */}\r\n                        <YouTube\r\n                          videoId={data ? data : \"\"} // defaults -> null\r\n                          //videoId={\"UCZ3K2j4WbnJ_jqL6Wmqi4mA\"} // defaults -> null\r\n                          id={\"YoutubePlayer\"} // defaults -> null\r\n                          className={\"YoutubePlayer center\"} // defaults -> null\r\n                          containerClassName={null} // defaults -> ''\r\n                          opts={opts} // defaults -> {}\r\n                          onReady={_onReady} // defaults -> noop\r\n                          // onPlay={func}                     // defaults -> noop\r\n                          // onPause={func}                    // defaults -> noop\r\n                          // onEnd={func}                      // defaults -> noop\r\n                          // onError={func}                    // defaults -> noop\r\n                          // onStateChange={func}              // defaults -> noop\r\n                          // onPlaybackRateChange={func}       // defaults -> noop\r\n                          // onPlaybackQualityChange={func}    // defaults -> noop\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n                  </Row>\r\n                </div>\r\n              </Container>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nWatchOnline.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  getLivestreamKey: PropTypes.func.isRequired,\r\n  uploadLivestreamKey: PropTypes.func.isRequired,\r\n  livestream: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  livestream: state.livestream\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getLivestreamKey,\r\n  uploadLivestreamKey\r\n})(WatchOnline);\r\n"]},"metadata":{},"sourceType":"module"}