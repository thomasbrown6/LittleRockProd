{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, USERS_LOADED, AUTH_ERROR, CLEAR_PROFILE, DELETE_USER_FAIL } from \"./types\"; // Load User\n\nexport const getUsers = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/auth/users\");\n    dispatch({\n      type: USERS_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/auth\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"error\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/auth\", body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"error\")));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // Delete User\n\nexport const deleteUser = email => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email\n  });\n\n  try {\n    const res = await axios.delete(\"/api/auth\", body, config);\n    dispatch({\n      type: DELETE_USER_FAIL\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n    dispatch(setAlert(`successfully deleted user: ${email}`, \"success\"));\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"error\")));\n    }\n\n    dispatch({\n      type: DELETE_USER_FAIL\n    });\n  }\n}; //Logout User, Clear profile\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/v-thobr/projects/littlerock/LittleRockChurchApp/client/src/actions/auth.js"],"names":["axios","setAlert","setAuthToken","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","USERS_LOADED","AUTH_ERROR","CLEAR_PROFILE","DELETE_USER_FAIL","getUsers","dispatch","res","get","type","payload","data","err","loadUser","localStorage","token","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","deleteUser","delete","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  USERS_LOADED,\r\n  AUTH_ERROR,\r\n  CLEAR_PROFILE,\r\n  DELETE_USER_FAIL\r\n} from \"./types\";\r\n\r\n// Load User\r\nexport const getUsers = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/auth/users\");\r\n\r\n    dispatch({\r\n      type: USERS_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/users\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"error\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"error\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Delete User\r\nexport const deleteUser = (email) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email });\r\n\r\n  try {\r\n    const res = await axios.delete(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: DELETE_USER_FAIL\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    dispatch(setAlert(`successfully deleted user: ${email}`, \"success\"));\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"error\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: DELETE_USER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n//Logout User, Clear profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}