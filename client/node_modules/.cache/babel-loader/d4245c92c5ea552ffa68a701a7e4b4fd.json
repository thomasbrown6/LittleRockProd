{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\v-thobr\\\\projects\\\\littlerock\\\\LittleRockChurchApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{connect}from\"react-redux\";import Layout from\"../../components/Layout\";import Banner from\"../../components/Banner\";import{Container,Row,Col}from\"react-bootstrap\";import TextField from\"@material-ui/core/TextField\";import Button from\"@material-ui/core/Button\";import YouTube from\"react-youtube\";import{getLivestreamKey,uploadLivestreamKey}from\"../../actions/key\";var WatchOnline=function WatchOnline(_ref){var isAuthenticated=_ref.auth.isAuthenticated,data=_ref.livestream.data,getLivestreamKey=_ref.getLivestreamKey,uploadLivestreamKey=_ref.uploadLivestreamKey;useEffect(function(){getLivestreamKey();},[getLivestreamKey]);var _onReady=function _onReady(event){// access to player in all event handlers via event.target\nevent.target.playVideo();};var _useState=useState(),_useState2=_slicedToArray(_useState,2),inputKey=_useState2[0],setInputKey=_useState2[1];var handleInputChange=function handleInputChange(e){setInputKey(e.target.value);};var uploadKey=function uploadKey(async){console.log(\"uploading key... \"+inputKey);uploadLivestreamKey(inputKey);};console.log(\"key data \".concat(data?data:\" - no key\"));var opts={height:\"900\",width:\"1200\",playerVars:{// https://developers.google.com/youtube/player_parameters\nautoplay:1}};return/*#__PURE__*/React.createElement(Layout,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Banner,{id:\"banner\",headerText:\"\",image:require(\"../../static/images/banners/watch-online.jpg\"),Breadcrumb1:\"HOME\",tag1:\"a\",href1:\"/\",Breadcrumb2:\"GET CONNECTED\",tag2:\"a\",href2:\"#\",Breadcrumb3:\"Watch Online\",tag3:\"span\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"secondary\"},/*#__PURE__*/React.createElement(\"section\",{id:\"two\"},/*#__PURE__*/React.createElement(\"div\",{className:\"inner\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",{className:\"left\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(\"header\",{className:\"major\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Watch Online\")))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"center wd100\"},/*#__PURE__*/React.createElement(Col,{xs:12},isAuthenticated&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(TextField,{id:\"standard-basic\",margin:\"normal\",name:\"inputKey\",value:inputKey,onChange:function onChange(e){return handleInputChange(e);},label:\"Video Key\"})))),isAuthenticated&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(\"div\",{className:\"center\"},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:uploadKey},\"Upload Key\")))),/*#__PURE__*/React.createElement(YouTube,{videoId:data?data:\"\"// defaults -> null\n//videoId={\"UCZ3K2j4WbnJ_jqL6Wmqi4mA\"} // defaults -> null\n,id:\"YoutubePlayer\"// defaults -> null\n,className:\"YoutubePlayer center\"// defaults -> null\n,containerClassName:null// defaults -> ''\n,opts:opts// defaults -> {}\n,onReady:_onReady// defaults -> noop\n// onPlay={func}                     // defaults -> noop\n// onPause={func}                    // defaults -> noop\n// onEnd={func}                      // defaults -> noop\n// onError={func}                    // defaults -> noop\n// onStateChange={func}              // defaults -> noop\n// onPlaybackRateChange={func}       // defaults -> noop\n// onPlaybackQualityChange={func}    // defaults -> noop\n})))))))))));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,livestream:state.livestream};};export default connect(mapStateToProps,{getLivestreamKey:getLivestreamKey,uploadLivestreamKey:uploadLivestreamKey})(WatchOnline);","map":{"version":3,"sources":["C:/Users/v-thobr/projects/littlerock/LittleRockChurchApp/client/src/pages/media-resources/watch-online.jsx"],"names":["React","useState","useEffect","connect","Layout","Banner","Container","Row","Col","TextField","Button","YouTube","getLivestreamKey","uploadLivestreamKey","WatchOnline","isAuthenticated","auth","data","livestream","_onReady","event","target","playVideo","inputKey","setInputKey","handleInputChange","e","value","uploadKey","async","console","log","opts","height","width","playerVars","autoplay","require","mapStateToProps","state"],"mappings":"iMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,aAAxB,CAGA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CAEA,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,GAAzB,KAAoC,iBAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CAEA,OAASC,gBAAT,CAA2BC,mBAA3B,KAAsD,mBAAtD,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAKd,IAJIC,CAAAA,eAIJ,MAJJC,IAII,CAJID,eAIJ,CAHUE,IAGV,MAHJC,UAGI,CAHUD,IAGV,CAFJL,gBAEI,MAFJA,gBAEI,CADJC,mBACI,MADJA,mBACI,CACJX,SAAS,CAAC,UAAM,CACdU,gBAAgB,GACjB,CAFQ,CAEN,CAACA,gBAAD,CAFM,CAAT,CAIA,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B;AACAA,KAAK,CAACC,MAAN,CAAaC,SAAb,GACD,CAHD,CALI,cAU4BrB,QAAQ,EAVpC,wCAUGsB,QAVH,eAUaC,WAVb,eAYJ,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/BF,WAAW,CAACE,CAAC,CAACL,MAAF,CAASM,KAAV,CAAX,CACD,CAFD,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3BC,OAAO,CAACC,GAAR,CAAY,oBAAsBR,QAAlC,EACAV,mBAAmB,CAACU,QAAD,CAAnB,CACD,CAHD,CAKAO,OAAO,CAACC,GAAR,oBAAwBd,IAAI,CAAGA,IAAH,CAAU,WAAtC,GACA,GAAMe,CAAAA,IAAI,CAAG,CACXC,MAAM,CAAE,KADG,CAEXC,KAAK,CAAE,MAFI,CAGXC,UAAU,CAAE,CACV;AACAC,QAAQ,CAAE,CAFA,CAHD,CAAb,CASA,mBACE,oBAAC,MAAD,mBACE,4CACE,oBAAC,MAAD,EACE,EAAE,CAAC,QADL,CAEE,UAAU,CAAC,EAFb,CAGE,KAAK,CAAEC,OAAO,CAAC,8CAAD,CAHhB,CAIE,WAAW,CAAC,MAJd,CAKE,IAAI,CAAC,GALP,CAME,KAAK,CAAC,GANR,CAOE,WAAW,CAAC,eAPd,CAQE,IAAI,CAAC,GARP,CASE,KAAK,CAAC,GATR,CAUE,WAAW,CAAC,cAVd,CAWE,IAAI,CAAC,MAXP,EADF,cAeE,2BAAK,SAAS,CAAC,WAAf,eACE,+BAAS,EAAE,CAAC,KAAZ,eACE,2BAAK,SAAS,CAAC,OAAf,eACE,oBAAC,SAAD,mBACE,2BAAK,SAAS,CAAC,MAAf,eACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACE,8BAAQ,SAAS,CAAC,OAAlB,eACE,6CADF,CADF,CADF,CADF,cAQE,oBAAC,GAAD,mBACE,2BAAK,SAAS,CAAC,cAAf,eACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,EACGtB,eAAe,eACd,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACE,2BAAK,SAAS,CAAC,QAAf,eACE,oBAAC,SAAD,EACE,EAAE,CAAC,gBADL,CAEE,MAAM,CAAC,QAFT,CAGE,IAAI,CAAC,UAHP,CAIE,KAAK,CAAEQ,QAJT,CAKE,QAAQ,CAAE,kBAACG,CAAD,QAAOD,CAAAA,iBAAiB,CAACC,CAAD,CAAxB,EALZ,CAME,KAAK,CAAC,WANR,EADF,CADF,CADF,CAFJ,CAiBGX,eAAe,eACd,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACE,2BAAK,SAAS,CAAC,QAAf,eACE,oBAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAC,SAFR,CAGE,OAAO,CAAEa,SAHX,eADF,CADF,CADF,CAlBJ,cAsCE,oBAAC,OAAD,EACE,OAAO,CAAEX,IAAI,CAAGA,IAAH,CAAU,EAAI;AAC3B;AAFF,CAGE,EAAE,CAAE,eAAiB;AAHvB,CAIE,SAAS,CAAE,sBAAwB;AAJrC,CAKE,kBAAkB,CAAE,IAAM;AAL5B,CAME,IAAI,CAAEe,IAAM;AANd,CAOE,OAAO,CAAEb,QAAU;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AAdF,EAtCF,CADF,CADF,CARF,CADF,CADF,CADF,CADF,CAfF,CADF,CADF,CAgGD,CApID,CA8IA,GAAMmB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCvB,IAAI,CAAEuB,KAAK,CAACvB,IADsB,CAElCE,UAAU,CAAEqB,KAAK,CAACrB,UAFgB,CAAZ,EAAxB,CAKA,cAAef,CAAAA,OAAO,CAACmC,eAAD,CAAkB,CACtC1B,gBAAgB,CAAhBA,gBADsC,CAEtCC,mBAAmB,CAAnBA,mBAFsC,CAAlB,CAAP,CAGZC,WAHY,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Layout from \"../../components/Layout\";\r\nimport Banner from \"../../components/Banner\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nimport { getLivestreamKey, uploadLivestreamKey } from \"../../actions/key\";\r\n\r\nconst WatchOnline = ({\r\n  auth: { isAuthenticated },\r\n  livestream: { data },\r\n  getLivestreamKey,\r\n  uploadLivestreamKey\r\n}) => {\r\n  useEffect(() => {\r\n    getLivestreamKey();\r\n  }, [getLivestreamKey]);\r\n\r\n  const _onReady = (event) => {\r\n    // access to player in all event handlers via event.target\r\n    event.target.playVideo();\r\n  };\r\n\r\n  const [inputKey, setInputKey] = useState();\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputKey(e.target.value);\r\n  };\r\n\r\n  const uploadKey = (async) => {\r\n    console.log(\"uploading key... \" + inputKey);\r\n    uploadLivestreamKey(inputKey);\r\n  };\r\n\r\n  console.log(`key data ${data ? data : \" - no key\"}`);\r\n  const opts = {\r\n    height: \"900\",\r\n    width: \"1200\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <Banner\r\n          id=\"banner\"\r\n          headerText=\"\"\r\n          image={require(\"../../static/images/banners/watch-online.jpg\")}\r\n          Breadcrumb1=\"HOME\"\r\n          tag1=\"a\"\r\n          href1=\"/\"\r\n          Breadcrumb2=\"GET CONNECTED\"\r\n          tag2=\"a\"\r\n          href2=\"#\"\r\n          Breadcrumb3=\"Watch Online\"\r\n          tag3=\"span\"\r\n        />\r\n\r\n        <div className=\"secondary\">\r\n          <section id=\"two\">\r\n            <div className=\"inner\">\r\n              <Container>\r\n                <div className=\"left\">\r\n                  <Row>\r\n                    <Col xs={12}>\r\n                      <header className=\"major\">\r\n                        <h1>Watch Online</h1>\r\n                      </header>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <div className=\"center wd100\">\r\n                      <Col xs={12}>\r\n                        {isAuthenticated && (\r\n                          <Row>\r\n                            <Col xs={12}>\r\n                              <div className=\"center\">\r\n                                <TextField\r\n                                  id=\"standard-basic\"\r\n                                  margin=\"normal\"\r\n                                  name=\"inputKey\"\r\n                                  value={inputKey}\r\n                                  onChange={(e) => handleInputChange(e)}\r\n                                  label=\"Video Key\"\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        )}\r\n                        {isAuthenticated && (\r\n                          <Row>\r\n                            <Col xs={12}>\r\n                              <div className=\"center\">\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={uploadKey}\r\n                                >\r\n                                  Upload Key\r\n                                </Button>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        )}\r\n                        {/* <Vimeo videoId={\"https://vimeo.com/events/8770696/videos/194916621\"} autoplay={true} /> */}\r\n                        {/* <iframe src=\"https://player.vimeo.com/video/2111489\" width=\"100%\" height=\"100%\" frameborder=\"0\" title=\"Live Stream\" webkitallowfullscreen mozallowfullscreen allowfullscreen> */}\r\n                        {/* <iframe src=\"https://vimeo.com/groups/8770696/videos/194942590\" width=\"100%\" height=\"100%\" frameborder=\"0\" title=\"Live Stream\" webkitallowfullscreen mozallowfullscreen allowfullscreen> */}\r\n\r\n                        {/* </iframe> */}\r\n                        {/* <ReactPlayer url='https://livestream.com/accounts/2111489/events/8770696' width='100%'  height='100%' playing={true} /> */}\r\n                        <YouTube\r\n                          videoId={data ? data : \"\"} // defaults -> null\r\n                          //videoId={\"UCZ3K2j4WbnJ_jqL6Wmqi4mA\"} // defaults -> null\r\n                          id={\"YoutubePlayer\"} // defaults -> null\r\n                          className={\"YoutubePlayer center\"} // defaults -> null\r\n                          containerClassName={null} // defaults -> ''\r\n                          opts={opts} // defaults -> {}\r\n                          onReady={_onReady} // defaults -> noop\r\n                          // onPlay={func}                     // defaults -> noop\r\n                          // onPause={func}                    // defaults -> noop\r\n                          // onEnd={func}                      // defaults -> noop\r\n                          // onError={func}                    // defaults -> noop\r\n                          // onStateChange={func}              // defaults -> noop\r\n                          // onPlaybackRateChange={func}       // defaults -> noop\r\n                          // onPlaybackQualityChange={func}    // defaults -> noop\r\n                        />\r\n                      </Col>\r\n                    </div>\r\n                  </Row>\r\n                </div>\r\n              </Container>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nWatchOnline.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  getLivestreamKey: PropTypes.func.isRequired,\r\n  uploadLivestreamKey: PropTypes.func.isRequired,\r\n  livestream: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  livestream: state.livestream\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getLivestreamKey,\r\n  uploadLivestreamKey\r\n})(WatchOnline);\r\n"]},"metadata":{},"sourceType":"module"}