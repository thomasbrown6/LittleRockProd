{"ast":null,"code":"import axios from \"axios\";\nimport { GET_CALENDAREVENTS, CALENDAREVENT_ERROR, CLEAR_CALENDAREVENT } from \"./types\"; // Get calendar events\n\nexport const getCalendarEvents = () => async dispatch => {\n  const CALENDAR_ID = \"littlerockamezion.org_q8n87gmgm6re5mkhhr4gvmj7bs@group.calendar.google.com\"; // const API_KEY = \"AIzaSyCF5wB9cJEUkLttrqYXS886n8dDJZkQJco\";\n  //const CALENDAR_ID = \"ib74prv527n2uvhfle9enchh9g@group.calendar.google.com\";\n\n  const API_KEY = \"AIzaSyCF5wB9cJEUkLttrqYXS886n8dDJZkQJco\";\n  let url = `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${API_KEY}`;\n\n  try {\n    const res = await axios.get(url);\n    let events = [];\n    res.data.items.map(event => {\n      events.push({\n        start: event.start.date || event.start.dateTime,\n        end: event.end.date || event.end.dateTime,\n        title: event.summary\n      });\n    });\n    console.log(res.data);\n    dispatch({\n      type: GET_CALENDAREVENTS,\n      payload: events\n    });\n  } catch (err) {\n    console.log(err + \":  \" + err.message);\n\n    if (err.response) {\n      dispatch({\n        type: CALENDAREVENT_ERROR,\n        payload: {\n          msg: err.response,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/v-thobr/projects/littlerock/LittleRockChurchApp/client/src/actions/calendar.js"],"names":["axios","GET_CALENDAREVENTS","CALENDAREVENT_ERROR","CLEAR_CALENDAREVENT","getCalendarEvents","dispatch","CALENDAR_ID","API_KEY","url","res","get","events","data","items","map","event","push","start","date","dateTime","end","title","summary","console","log","type","payload","err","message","response","msg","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,SAJP,C,CAMA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACzD,QAAMC,WAAW,GACf,4EADF,CADyD,CAGzD;AACA;;AACA,QAAMC,OAAO,GAAG,yCAAhB;AACA,MAAIC,GAAG,GAAI,oDAAmDF,WAAY,eAAcC,OAAQ,EAAhG;;AAEA,MAAI;AACF,UAAME,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUF,GAAV,CAAlB;AAEA,QAAIG,MAAM,GAAG,EAAb;AAEAF,IAAAA,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAeC,GAAf,CAAoBC,KAAD,IAAW;AAC5BJ,MAAAA,MAAM,CAACK,IAAP,CAAY;AACVC,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYC,IAAZ,IAAoBH,KAAK,CAACE,KAAN,CAAYE,QAD7B;AAEVC,QAAAA,GAAG,EAAEL,KAAK,CAACK,GAAN,CAAUF,IAAV,IAAkBH,KAAK,CAACK,GAAN,CAAUD,QAFvB;AAGVE,QAAAA,KAAK,EAAEN,KAAK,CAACO;AAHH,OAAZ;AAKD,KAND;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,GAAG,CAACG,IAAhB;AACAP,IAAAA,QAAQ,CAAC;AACPoB,MAAAA,IAAI,EAAExB,kBADC;AAEPyB,MAAAA,OAAO,EAAEf;AAFF,KAAD,CAAR;AAID,GAlBD,CAkBE,OAAOgB,GAAP,EAAY;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,GAAG,KAAN,GAAcA,GAAG,CAACC,OAA9B;;AACA,QAAID,GAAG,CAACE,QAAR,EAAkB;AAChBxB,MAAAA,QAAQ,CAAC;AACPoB,QAAAA,IAAI,EAAEvB,mBADC;AAEPwB,QAAAA,OAAO,EAAE;AAAEI,UAAAA,GAAG,EAAEH,GAAG,CAACE,QAAX;AAAqBE,UAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAA1C;AAFF,OAAD,CAAR;AAID;AACF;AACF,CAnCM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_CALENDAREVENTS,\r\n  CALENDAREVENT_ERROR,\r\n  CLEAR_CALENDAREVENT\r\n} from \"./types\";\r\n\r\n// Get calendar events\r\nexport const getCalendarEvents = () => async (dispatch) => {\r\n  const CALENDAR_ID =\r\n    \"littlerockamezion.org_q8n87gmgm6re5mkhhr4gvmj7bs@group.calendar.google.com\";\r\n  // const API_KEY = \"AIzaSyCF5wB9cJEUkLttrqYXS886n8dDJZkQJco\";\r\n  //const CALENDAR_ID = \"ib74prv527n2uvhfle9enchh9g@group.calendar.google.com\";\r\n  const API_KEY = \"AIzaSyCF5wB9cJEUkLttrqYXS886n8dDJZkQJco\";\r\n  let url = `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${API_KEY}`;\r\n\r\n  try {\r\n    const res = await axios.get(url);\r\n\r\n    let events = [];\r\n\r\n    res.data.items.map((event) => {\r\n      events.push({\r\n        start: event.start.date || event.start.dateTime,\r\n        end: event.end.date || event.end.dateTime,\r\n        title: event.summary\r\n      });\r\n    });\r\n\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: GET_CALENDAREVENTS,\r\n      payload: events\r\n    });\r\n  } catch (err) {\r\n    console.log(err + \":  \" + err.message);\r\n    if (err.response) {\r\n      dispatch({\r\n        type: CALENDAREVENT_ERROR,\r\n        payload: { msg: err.response, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}